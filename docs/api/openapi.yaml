# docs/api/openapi.yaml
openapi: 3.0.0
info:
  title: RAG Chatbot API
  version: 1.0.0
  description: API documentation for RAG-enabled chatbot system

servers:
  - url: http://localhost:8000
    description: Development server
  - url: https://api.example.com
    description: Production server

components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
          description: Unique message identifier
        content:
          type: string
          description: Message content
        role:
          type: string
          enum: [user, assistant, system]
          description: Role of the message sender
        type:
          type: string
          enum: [text, embedding]
          description: Type of message
        timestamp:
          type: string
          format: date-time
          description: Message timestamp
        metadata:
          type: object
          additionalProperties: true
          description: Additional message metadata

    MessageRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: The message content
        temperature:
          type: number
          format: float
          minimum: 0
          maximum: 1
          default: 0.7
          description: Controls response randomness
        max_tokens:
          type: integer
          minimum: 1
          maximum: 4096
          description: Maximum response length

    Document:
      type: object
      required:
        - content
        - source
      properties:
        content:
          type: string
          description: Document content
        source:
          type: string
          description: Document source
        metadata:
          type: object
          additionalProperties: true
          description: Document metadata
        chunk_size:
          type: integer
          description: Size for document chunking

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: string
          description: Additional error details

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

paths:
  /api/v1/chat/{session_id}/messages:
    post:
      summary: Send a message and get a response
      operationId: sendMessage
      security:
        - ApiKeyAuth: []
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          description: Chat session identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/documents:
    post:
      summary: Upload and process a document
      operationId: uploadDocument
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '204':
          description: Document successfully processed
        '400':
          description: Invalid document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: List processed documents
      operationId: listDocuments
      security:
        - ApiKeyAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Items per page
      responses:
        '200':
          description: List of documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'